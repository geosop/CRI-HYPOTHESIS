name: build-and-test

on:
  push:
  pull_request:

jobs:
  figures:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg  # headless matplotlib
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system packages (LaTeX + tools)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            texlive-latex-extra texlive-pictures texlive-fonts-recommended \
            texlive-science texlive-fonts-extra latexmk \
            poppler-utils imagemagick

      - name: Show tree (top level)
        run: |
          ls -la
          echo "---- figures/ ----"
          ls -la figures || true
          echo "---- utilities/ ----"
          ls -la utilities || true

      - name: Ensure runner can execute the script
        run: chmod +x run_all.sh

      - name: Install Python deps (pip-only for CI)
        run: |
          python -m pip install --upgrade pip
          if [ -f utilities/requirements.pip.txt ]; then
            echo "Installing from utilities/requirements.pip.txt"
            pip install -r utilities/requirements.pip.txt
          elif [ -f requirements.pip.txt ]; then
            echo "Installing from requirements.pip.txt"
            pip install -r requirements.pip.txt
          else
            echo "No pip-only requirements file found; installing minimal deps"
            pip install numpy matplotlib PyYAML
          fi

      - name: Build figures (incl. TikZ â†’ PDF/PNG)
        run: |
          CRI_FIGS_ONLY=1 ./run_all.sh

      - name: List outputs before smoke test
        run: |
          echo "---- figures/output/ ----"
          ls -la figures/output || true
          echo "---- find figures (2 levels) ----"
          find figures -maxdepth 2 -type f -printf "%p\t%k KB\n" | sort

      - name: Stamp build metadata
        run: |
          python - <<'PY'
          import os, json, platform, sys
          from datetime import datetime, timezone
          from pathlib import Path
          out = Path("figures/output"); out.mkdir(parents=True, exist_ok=True)
          info = {
            "timestamp_utc": datetime.now(timezone.utc).strftime("%Y-%m-%dT%H:%M:%SZ"),
            "github": {
              "workflow": os.environ.get("GITHUB_WORKFLOW"),
              "run_id": os.environ.get("GITHUB_RUN_ID"),
              "run_number": os.environ.get("GITHUB_RUN_NUMBER"),
              "sha": os.environ.get("GITHUB_SHA"),
              "ref": os.environ.get("GITHUB_REF"),
              "actor": os.environ.get("GITHUB_ACTOR"),
              "repo": os.environ.get("GITHUB_REPOSITORY"),
            },
            "runtime": {
              "python": sys.version.replace("\n"," "),
              "platform": platform.platform(),
            }
          }
          (out/"build_info.json").write_text(json.dumps(info, indent=2))
          print(json.dumps(info, indent=2))
          PY

      - name: Smoke test figures
        run: |
          python utilities/smoke_test.py --dir figures/output

      - name: Upload figure artifacts
        uses: actions/upload-artifact@v4
        with:
          name: figures
          path: |
            figures/output/*.pdf
            figures/output/*.png
            figures/output/manifest.*
            figures/output/build_info.json
