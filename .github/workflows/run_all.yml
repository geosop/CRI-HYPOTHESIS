name: Run CRI pipeline

on:
  workflow_dispatch:
    inputs:
      figs_only:
        description: "Only build figures (skip long simulations)"
        type: boolean
        default: false
      skip_tex:
        description: "Skip LaTeX/TikZ build (faster; default)"
        type: boolean
        default: true
      auto_install:
        description: "pip install (requirements + core deps)"
        type: boolean
        default: true
      skip_diag:
        description: "Skip SI diagnostics (kernel + calibration)"
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python 3.11 with pip cache
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            utilities/requirements.txt
            **/pyproject.toml

      # Always ensure the minimal core deps (fixes "No module named 'yaml'")
      - name: Ensure core deps (always)
        run: |
          python -m pip install --upgrade pip
          python -m pip install PyYAML numpy pandas scipy matplotlib statsmodels

      - name: Install Python deps (cleaned requirements)
        if: ${{ inputs.auto_install }}
        run: |
          if [ -f utilities/requirements.txt ]; then
            # Strip local file:// pins and heavy GUI/3D packages that often fail on CI
            sed -E 's|[[:space:]]*@ file://.*$||' utilities/requirements.txt \
              | grep -v -E '^(opencv-python(-headless)?|mne|vtk|PyQt5|PySide6|pyvista|pyvistaqt|openmeeg)$' \
              > /tmp/reqs_clean.txt
            python -m pip install -r /tmp/reqs_clean.txt || true
          fi

      - name: Run pipeline
        env:
          CRI_FIGS_ONLY:   ${{ inputs.figs_only && '1' || '0' }}
          CRI_SKIP_TEX:    ${{ inputs.skip_tex && '1' || '0' }}
          CRI_AUTO_INSTALL: ${{ inputs.auto_install && '1' || '0' }}
          CRI_SKIP_DIAG:   ${{ inputs.skip_diag && '1' || '0' }}
        run: |
          chmod +x run_all.sh
          ./run_all.sh

      - name: Show regenerated decay_data.csv (debug)
        run: |
          echo "HEAD of freshly generated decay_data.csv:"
          sed -n '1,40p' decay/output/decay_data.csv || true

      - name: Commit updated decay outputs to main
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add decay/output/decay_data.csv \
                  decay/output/decay_curve.csv \
                  decay/output/fit_decay_results.csv \
                  decay/output/decay_band.csv || true

          git status --porcelain
          if ! git diff --cached --quiet; then
            git commit -m "CI: update decay outputs (auto) [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Upload figures
        uses: actions/upload-artifact@v4
        with:
          name: figures-output
          path: figures/output/**
