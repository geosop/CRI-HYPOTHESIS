name: Run CRI pipeline

on:
  workflow_dispatch:
    inputs:
      figs_only:
        description: "Only build figures (skip long simulations)"
        type: boolean
        default: false
      skip_tex:
        description: "Skip LaTeX/TikZ build (faster; default)"
        type: boolean
        default: true
      auto_install:
        description: "pip install -r requirements.txt"
        type: boolean
        default: true
      skip_diag:
        description: "Skip SI diagnostics (kernel + calibration)"
        type: boolean
        default: false

# ✅ allow push via GITHUB_TOKEN
permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # ✅ we need full history to push back
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python 3.11 with pip cache
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            utilities/requirements.txt
            **/pyproject.toml

      - name: Install Python deps (minimal fallback)
        if: ${{ github.event.inputs.auto_install != 'false' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f utilities/requirements.txt ]; then
            # Quick workaround to ignore local wheel/file pins:
            sed -E 's| @ file://.*$||' utilities/requirements.txt > /tmp/reqs_clean.txt
            grep -v -E '^(opencv-python-headless|opencv-python)$' /tmp/reqs_clean.txt > /tmp/reqs_clean2.txt
            python -m pip install -r /tmp/reqs_clean2.txt
          else
            python -m pip install numpy pandas scipy matplotlib PyYAML
          fi

      - name: Run pipeline
        env:
          CRI_FIGS_ONLY: ${{ github.event.inputs.figs_only }}
          CRI_SKIP_TEX: ${{ github.event.inputs.skip_tex }}
          CRI_AUTO_INSTALL: ${{ github.event.inputs.auto_install }}
          CRI_SKIP_DIAG: ${{ github.event.inputs.skip_diag }}
        run: |
          chmod +x run_all.sh
          ./run_all.sh

      - name: Peek decay_data.csv (debug)
        run: |
          echo "HEAD of freshly generated decay_data.csv:"
          sed -n '1,40p' decay/output/decay_data.csv || true

      # ✅ Commit & push generated files back to the repo
      #    (Only on manual runs; won’t loop since this workflow triggers only on workflow_dispatch)
      - name: Commit updated outputs to main
        if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main' }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add specific files you want versioned:
          git add decay/output/decay_data.csv
          git add decay/output/decay_curve.csv
          git add decay/output/fit_decay_results.csv
          git add decay/output/decay_band.csv

          # You can add more, or keep it targeted to avoid committing large binaries.
          # git status --porcelain for visibility:
          git status --porcelain

          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "CI: update decay outputs [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi

      # (Optional) Upload artifacts as before
      - name: Upload figures
        uses: actions/upload-artifact@v4
        with:
          name: figures-output
          path: figures/output/**
