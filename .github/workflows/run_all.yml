name: Run CRI pipeline

on:
  workflow_dispatch:
    inputs:
      figs_only:
        description: "Only build figures (skip long simulations)"
        type: boolean
        default: false
      skip_tex:
        description: "Skip LaTeX/TikZ build (faster; default)"
        type: boolean
        default: true
      auto_install:
        description: "pip install -r requirements.txt"
        type: boolean
        default: true
      skip_diag:
        description: "Skip SI diagnostics (kernel + calibration)"
        type: boolean
        default: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
      # Docs: setup-python action.  :contentReference[oaicite:1]{index=1}

      # Optional TeX toolchain (only if you uncheck "skip_tex" in the UI)
      - name: TeX Live (latexmk)
        if: ${{ github.event.inputs.skip_tex == 'false' }}
        uses: xu-cheng/texlive-action@v2
        with:
          packages: >
            scheme-small latexmk
      # TeX action reference.  :contentReference[oaicite:2]{index=2}

      - name: pdftocairo for PDFâ†’PNG
        if: ${{ github.event.inputs.skip_tex == 'false' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y poppler-utils

      - name: Install Python deps
        if: ${{ github.event.inputs.auto_install != 'false' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install numpy pandas scipy matplotlib PyYAML
          fi

      - name: Run pipeline
        env:
          CRI_FIGS_ONLY: ${{ github.event.inputs.figs_only }}
          CRI_SKIP_TEX: ${{ github.event.inputs.skip_tex }}
          CRI_AUTO_INSTALL: ${{ github.event.inputs.auto_install }}
          CRI_SKIP_DIAG: ${{ github.event.inputs.skip_diag }}
          # (Your script already sets deterministic env vars internally)
        run: |
          chmod +x run_all.sh
          ./run_all.sh

      # Collect artifacts for download from the Actions run page
      - name: Upload figures
        uses: actions/upload-artifact@v4
        with:
          name: figures-output
          path: figures/output/**

      - name: Upload logistic outputs
        uses: actions/upload-artifact@v4
        with:
          name: logistic-gate-output
          path: logistic_gate/output/**

      - name: Upload other outputs
        uses: actions/upload-artifact@v4
        with:
          name: all-outputs
          path: |
            decay/output/**
            tierB_tempered/output/**
            qpt/**/output/**
            preprocessing/output/**
            epochs_features/output/**
            statistics/output/**
